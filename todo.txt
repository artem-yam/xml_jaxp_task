
Теория (до 23 минуты):
1) Недостатки XML.
2) Сколько допускается корневых элементов.
3) Как задать кодировку. Кодировка по умолчанию.
4) Пример Xml-кода. Что неправильно, как исправить. 
5) Спецсимволы (мнемоники). 
6) CDATA.
7) NameSpace. Что такое, зачем нужны, как задается.
8) DTD, xsd. Зачем нужны, чем отличаются. 
Как привязать xsd к xml(в том числе и без неймспейса).
9) Обзор xsd. Возможности, теги, типы данных и т.п.
10) Jaxp. Что такое.
11) DOM-parser.
12) SAX-parser.
13) DOM vs SAX.
14) StaX.
15) Как создать элемент и добавить в него текствоую node.
16) Как получить все элементы по названию тега.
17) Как скопировать node со всеми дочерними элементами.
18) Как перемещать элементы внутри документа.
19) Основые события SAX.
20-21) Шаги обработки документа через DOM/SAX.
22) Как провалидировать xml-документ.

Практика (с 24 минуты):
+  1) Убрать хардкод путей к xml и xsd; 
можно передавать в агрументах (25:30-26:30) 
+? 2) изменить метод main;
убрать безнес-логику и т.п. (26:30-28:00)
+  3) Убрать магические строки (28:20-28:40)
+  4) В компараторе расширить compare по аналогии 
с автосгенеренным equals. (34:30-36:30)
+  5) Все комменты на английском!!!
+  6) В ParseHelper в методе isUserExists
переделать цикл под цикл с параметром. (1:07:00-1:08:00)
+  7) Вызывать sax-парсинг не в ChatSAXHandler; (1:12:00-1:13:40)
+  8) Переделать ChatSAXHandler; 
м.б. выделить бизнес-логику в доп. порождающие классы или
разделить на отдельные хендлеры для юзеров, ролей и т.д
(1:15:00-1:18:40)
+? 9) В DOMHelper в findElement оптимизировать код с 
булевыми переменными; аналогично с пунктом 6.
+- 10) Методы из ParseHelper перенести в соответствующие 
sax и dom хелперы; (1:20:30-1:23:00)
+? 11) Подумать, как в DAO передавать пути к файлам


Доделать пункт 10 (Порефакторить XMLUserDAO).
